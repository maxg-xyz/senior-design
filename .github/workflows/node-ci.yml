name: Node.js CI

on: [push]

jobs:
  api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2

        with:
          node-version: "16.x"

      - name: Test PSQL Database Connection
        run: psql -h postgres -d postgres -U postgres -c 'SELECT 1;'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build API
        run: yarn build

      - name: Set Environmental Variables & Run API
        run: yarn dev
        env:
          PORT: 4000
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
          REDIS_URL: localhost:6379
          CORS_ORIGIN: http://localhost:3000
          CORS_DOMAIN: localhost
          SESSION_SECRET: secrets
