name: Development CI

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev]

jobs:
  test-dev-api:
    name: Test API Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build API
        run: yarn build
  build-docker-dev-api:
    needs: test-dev-api
    name: Build & Push Docker Container for Development API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Docker Hub Authentication
        uses: docker/login-action@3f83d7b89cb3b72c3cb1c57dd6faaa722bb5895c
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@3a3bb3a81753dc99f090d24ee7e5343838b73a96
        with:
          images: mgraman/sd-dev

      - name: Create env vars
        run: touch ./server/.env

      - name: Set .env
        run: |
          cat >> ./server/.env <<EOL
          DATABASE_URL=${{secrets.DEV_DATABASE_URL}} 
          SESSION_SECRET=${{secrets.DEV_SESSION_SECRET}}
          CORS_DOMAIN=${{secrets.DEV_CORS_DOMAIN}} 
          CORS_ORIGIN=${{secrets.DEV_CORS_ORIGIN}} 
          REDIS_URL=${{secrets.DEV_REDIS_URL}}
          PORT=4000
          EOL

      - name: Check
        run: cat ./server/.env

      - name: Build and push Docker image
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-api-latest
          labels: ${{ steps.meta.outputs.labels }}
          file: ./dockerfiles/dev-ci.Dockerfile
  deploy-dev-api:
    needs: build-docker-dev-api
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Deploy Kubectl
        uses: dtzar/helm-kubectl@c9f43f42828853ae05cfa399a9bb305eefd1a218

      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Find Deploy Date
        run: sed -ie "s/deploy-date-value/${{steps.date.outputs.date}}/g" ./kubernetes/deployment.yaml

      - name: Make kubeconfig
        run: mkdir -p ./.kube/ && touch ./.kube/encode_config && touch ./.kube/config

      - name: Write Encoded Kubeconfig
        run: |
          cat >> ./.kube/encode_config <<EOL
          ${{secrets.RANCHER_KUBE_CONFIG}}
          EOL

      - name: Decode Kubeconfig
        run: base64 -d ./.kube/encode_config > ./.kube/config

      - name: Deploy Docker Image
        run: kubectl apply -f ./kubernetes/dev-api.deployment.yaml
